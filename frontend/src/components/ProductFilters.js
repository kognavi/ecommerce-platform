"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductFilters = ProductFilters;
// src/components/ProductFilters.tsx
const react_1 = require("react");
const lucide_react_1 = require("lucide-react");
function ProductFilters({ onFilterChange, onSortChange }) {
    const [isOpen, setIsOpen] = (0, react_1.useState)(false);
    const [minPrice, setMinPrice] = (0, react_1.useState)('');
    const [maxPrice, setMaxPrice] = (0, react_1.useState)('');
    const [search, setSearch] = (0, react_1.useState)('');
    const handleFilterApply = () => {
        onFilterChange({
            search,
            priceRange: {
                min: minPrice ? Number(minPrice) : null,
                max: maxPrice ? Number(maxPrice) : null,
            },
        });
    };
    return (<div className="mb-6">
      <div className="flex items-center gap-4 mb-4">
        <button onClick={() => setIsOpen(!isOpen)} className="flex items-center gap-2 px-4 py-2 bg-white rounded-lg shadow">
          <lucide_react_1.Filter className="h-5 w-5"/>
          フィルター
        </button>
        <select onChange={(e) => onSortChange(e.target.value)} className="px-4 py-2 bg-white rounded-lg shadow">
          <option value="">並び替え</option>
          <option value="price_asc">価格: 安い順</option>
          <option value="price_desc">価格: 高い順</option>
          <option value="name">名前順</option>
        </select>
      </div>

      {isOpen && (<div className="bg-white p-4 rounded-lg shadow mb-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                価格範囲
              </label>
              <div className="flex items-center gap-2">
                <input type="number" placeholder="最小価格" value={minPrice} onChange={(e) => setMinPrice(e.target.value)} className="w-full px-3 py-2 border rounded-md"/>
                <span>-</span>
                <input type="number" placeholder="最大価格" value={maxPrice} onChange={(e) => setMaxPrice(e.target.value)} className="w-full px-3 py-2 border rounded-md"/>
              </div>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                商品名で検索
              </label>
              <input type="text" placeholder="検索..." value={search} onChange={(e) => setSearch(e.target.value)} className="w-full px-3 py-2 border rounded-md"/>
            </div>
          </div>
          <div className="mt-4 flex justify-end">
            <button onClick={handleFilterApply} className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
              適用
            </button>
          </div>
        </div>)}
    </div>);
}
//# sourceMappingURL=data:application/json;base64,