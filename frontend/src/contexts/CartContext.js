"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCart = exports.CartProvider = void 0;
// src/contexts/CartContext.tsx
const react_1 = require("react");
const CartContext = (0, react_1.createContext)(null);
const cartReducer = (state, action) => {
    switch (action.type) {
        case 'ADD_ITEM': {
            const existingItem = state.items.find(item => item.id === action.payload.id);
            if (existingItem) {
                return {
                    ...state,
                    items: state.items.map(item => item.id === action.payload.id
                        ? { ...item, quantity: item.quantity + 1 }
                        : item),
                    total: state.total + action.payload.price
                };
            }
            return {
                ...state,
                items: [...state.items, { ...action.payload, quantity: 1 }],
                total: state.total + action.payload.price
            };
        }
        case 'REMOVE_ITEM': {
            const item = state.items.find(item => item.id === action.payload);
            if (!item)
                return state;
            return {
                ...state,
                items: state.items.filter(item => item.id !== action.payload),
                total: state.total - (item.price * item.quantity)
            };
        }
        case 'UPDATE_QUANTITY': {
            const item = state.items.find(item => item.id === action.payload.id);
            if (!item)
                return state;
            const quantityDiff = action.payload.quantity - item.quantity;
            return {
                ...state,
                items: state.items.map(item => item.id === action.payload.id
                    ? { ...item, quantity: action.payload.quantity }
                    : item),
                total: state.total + (item.price * quantityDiff)
            };
        }
        default:
            return state;
    }
};
const CartProvider = ({ children }) => {
    const [state, dispatch] = (0, react_1.useReducer)(cartReducer, { items: [], total: 0 });
    return (<CartContext.Provider value={{ state, dispatch }}>
      {children}
    </CartContext.Provider>);
};
exports.CartProvider = CartProvider;
const useCart = () => {
    const context = (0, react_1.useContext)(CartContext);
    if (!context) {
        throw new Error('useCart must be used within a CartProvider');
    }
    return context;
};
exports.useCart = useCart;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FydENvbnRleHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJDYXJ0Q29udGV4dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0JBQStCO0FBQy9CLGlDQUFvRTtBQW9CcEUsTUFBTSxXQUFXLEdBQUcsSUFBQSxxQkFBYSxFQUd2QixJQUFJLENBQUMsQ0FBQTtBQUVmLE1BQU0sV0FBVyxHQUFHLENBQUMsS0FBZ0IsRUFBRSxNQUFrQixFQUFhLEVBQUU7SUFDdEUsUUFBUSxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDcEIsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLE1BQU0sWUFBWSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQzVFLElBQUksWUFBWSxFQUFFLENBQUM7Z0JBQ2pCLE9BQU87b0JBQ0wsR0FBRyxLQUFLO29CQUNSLEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUM1QixJQUFJLENBQUMsRUFBRSxLQUFLLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRTt3QkFDM0IsQ0FBQyxDQUFDLEVBQUUsR0FBRyxJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFO3dCQUMxQyxDQUFDLENBQUMsSUFBSSxDQUNUO29CQUNELEtBQUssRUFBRSxLQUFLLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSztpQkFDMUMsQ0FBQTtZQUNILENBQUM7WUFDRCxPQUFPO2dCQUNMLEdBQUcsS0FBSztnQkFDUixLQUFLLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxHQUFHLE1BQU0sQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLENB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YXJ0Q29udGV4dC50c3hcbmltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VSZWR1Y2VyIH0gZnJvbSAncmVhY3QnXG5cbmludGVyZmFjZSBDYXJ0SXRlbSB7XG4gIGlkOiBudW1iZXJcbiAgdGl0bGU6IHN0cmluZ1xuICBwcmljZTogbnVtYmVyXG4gIHF1YW50aXR5OiBudW1iZXJcbiAgaW1hZ2U6IHN0cmluZ1xufVxuXG5pbnRlcmZhY2UgQ2FydFN0YXRlIHtcbiAgaXRlbXM6IENhcnRJdGVtW11cbiAgdG90YWw6IG51bWJlclxufVxuXG50eXBlIENhcnRBY3Rpb24gPVxuICB8IHsgdHlwZTogJ0FERF9JVEVNJzsgcGF5bG9hZDogT21pdDxDYXJ0SXRlbSwgJ3F1YW50aXR5Jz4gfVxuICB8IHsgdHlwZTogJ1JFTU9WRV9JVEVNJzsgcGF5bG9hZDogbnVtYmVyIH1cbiAgfCB7IHR5cGU6ICdVUERBVEVfUVVBTlRJVFknOyBwYXlsb2FkOiB7IGlkOiBudW1iZXI7IHF1YW50aXR5OiBudW1iZXIgfSB9XG5cbmNvbnN0IENhcnRDb250ZXh0ID0gY3JlYXRlQ29udGV4dDx7XG4gIHN0YXRlOiBDYXJ0U3RhdGVcbiAgZGlzcGF0Y2g6IFJlYWN0LkRpc3BhdGNoPENhcnRBY3Rpb24+XG59IHwgbnVsbD4obnVsbClcblxuY29uc3QgY2FydFJlZHVjZXIgPSAoc3RhdGU6IENhcnRTdGF0ZSwgYWN0aW9uOiBDYXJ0QWN0aW9uKTogQ2FydFN0YXRlID0+IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgJ0FERF9JVEVNJzoge1xuICAgICAgY29uc3QgZXhpc3RpbmdJdGVtID0gc3RhdGUuaXRlbXMuZmluZChpdGVtID0+IGl0ZW0uaWQgPT09IGFjdGlvbi5wYXlsb2FkLmlkKVxuICAgICAgaWYgKGV4aXN0aW5nSXRlbSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGl0ZW1zOiBzdGF0ZS5pdGVtcy5tYXAoaXRlbSA9PlxuICAgICAgICAgICAgaXRlbS5pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWRcbiAgICAgICAgICAgICAgPyB7IC4uLml0ZW0sIHF1YW50aXR5OiBpdGVtLnF1YW50aXR5ICsgMSB9XG4gICAgICAgICAgICAgIDogaXRlbVxuICAgICAgICAgICksXG4gICAgICAgICAgdG90YWw6IHN0YXRlLnRvdGFsICsgYWN0aW9uLnBheWxvYWQucHJpY2VcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGl0ZW1zOiBbLi4uc3RhdGUuaXRlbXMsIHsgLi4uYWN0aW9uLnBheWxvYWQsIHF1YW50aXR5OiAxIH1dLFxuICAgICAgICB0b3RhbDogc3RhdGUudG90YWwgKyBhY3Rpb24ucGF5bG9hZC5wcmljZVxuICAgICAgfVxuICAgIH1cbiAgICBjYXNlICdSRU1PVkVfSVRFTSc6IHtcbiAgICAgIGNvbnN0IGl0ZW0gPSBzdGF0ZS5pdGVtcy5maW5kKGl0ZW0gPT4gaXRlbS5pZCA9PT0gYWN0aW9uLnBheWxvYWQpXG4gICAgICBpZiAoIWl0ZW0pIHJldHVybiBzdGF0ZVxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGl0ZW1zOiBzdGF0ZS5pdGVtcy5maWx0ZXIoaXRlbSA9PiBpdGVtLmlkICE9PSBhY3Rpb24ucGF5bG9hZCksXG4gICAgICAgIHRvdGFsOiBzdGF0ZS50b3RhbCAtIChpdGVtLnByaWNlICogaXRlbS5xdWFudGl0eSlcbiAgICAgIH1cbiAgICB9XG4gICAgY2FzZSAnVVBEQVRFX1FVQU5USVRZJzoge1xuICAgICAgY29uc3QgaXRlbSA9IHN0YXRlLml0ZW1zLmZpbmQoaXRlbSA9PiBpdGVtLmlkID09PSBhY3Rpb24ucGF5bG9hZC5pZClcbiAgICAgIGlmICghaXRlbSkgcmV0dXJuIHN0YXRlXG4gICAgICBjb25zdCBxdWFudGl0eURpZmYgPSBhY3Rpb24ucGF5bG9hZC5xdWFudGl0eSAtIGl0ZW0ucXVhbnRpdHlcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBpdGVtczogc3RhdGUuaXRlbXMubWFwKGl0ZW0gPT5cbiAgICAgICAgICBpdGVtLmlkID09PSBhY3Rpb24ucGF5bG9hZC5pZFxuICAgICAgICAgICAgPyB7IC4uLml0ZW0sIHF1YW50aXR5OiBhY3Rpb24ucGF5bG9hZC5xdWFudGl0eSB9XG4gICAgICAgICAgICA6IGl0ZW1cbiAgICAgICAgKSxcbiAgICAgICAgdG90YWw6IHN0YXRlLnRvdGFsICsgKGl0ZW0ucHJpY2UgKiBxdWFudGl0eURpZmYpXG4gICAgICB9XG4gICAgfVxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGVcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgQ2FydFByb3ZpZGVyOiBSZWFjdC5GQzx7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfT4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIGNvbnN0IFtzdGF0ZSwgZGlzcGF0Y2hdID0gdXNlUmVkdWNlcihjYXJ0UmVkdWNlciwgeyBpdGVtczogW10sIHRvdGFsOiAwIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8Q2FydENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3sgc3RhdGUsIGRpc3BhdGNoIH19PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvQ2FydENvbnRleHQuUHJvdmlkZXI+XG4gIClcbn1cblxuZXhwb3J0IGNvbnN0IHVzZUNhcnQgPSAoKSA9PiB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KENhcnRDb250ZXh0KVxuICBpZiAoIWNvbnRleHQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZUNhcnQgbXVzdCBiZSB1c2VkIHdpdGhpbiBhIENhcnRQcm92aWRlcicpXG4gIH1cbiAgcmV0dXJuIGNvbnRleHRcbn1cbiJdfQ==